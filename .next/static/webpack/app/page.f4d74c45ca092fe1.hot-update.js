"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/Canvas.tsx":
/*!***********************************!*\
  !*** ./src/components/Canvas.tsx ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Canvas; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _contexts_ThemeContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/contexts/ThemeContext */ \"(app-pages-browser)/./src/contexts/ThemeContext.tsx\");\n/* harmony import */ var _SideMenu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SideMenu */ \"(app-pages-browser)/./src/components/SideMenu.tsx\");\n/* harmony import */ var _canvas_EdgeRenderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./canvas/EdgeRenderer */ \"(app-pages-browser)/./src/components/canvas/EdgeRenderer.tsx\");\n/* harmony import */ var _canvas_BackgroundDots__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./canvas/BackgroundDots */ \"(app-pages-browser)/./src/components/canvas/BackgroundDots.tsx\");\n/* harmony import */ var _canvas_CanvasNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./canvas/CanvasNode */ \"(app-pages-browser)/./src/components/canvas/CanvasNode.tsx\");\n/* harmony import */ var _canvas_ThemeToggle__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./canvas/ThemeToggle */ \"(app-pages-browser)/./src/components/canvas/ThemeToggle.tsx\");\n/* harmony import */ var _canvas_CanvasOverlay__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./canvas/CanvasOverlay */ \"(app-pages-browser)/./src/components/canvas/CanvasOverlay.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\nconst INITIAL_STATE = {\n    nodes: [],\n    edges: [],\n    scale: 1,\n    offset: {\n        x: 0,\n        y: 0\n    }\n};\nfunction Canvas() {\n    _s();\n    const { theme, toggleTheme } = (0,_contexts_ThemeContext__WEBPACK_IMPORTED_MODULE_2__.useTheme)();\n    const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(INITIAL_STATE);\n    const [isDragging, setIsDragging] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [dragStart, setDragStart] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        x: 0,\n        y: 0\n    });\n    const [isDraggingFile, setIsDraggingFile] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [activeCanvasId, setActiveCanvasId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Load last active canvas on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const last = localStorage.getItem(\"canvas-active\");\n        if (last) setActiveCanvasId(last);\n    }, []);\n    // Load canvas data when activeCanvasId changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!activeCanvasId) return;\n        const canvasDataStr = localStorage.getItem(\"canvas-\" + activeCanvasId);\n        if (canvasDataStr) {\n            try {\n                const canvasData = JSON.parse(canvasDataStr);\n                const nodes = canvasData.nodes.map((node)=>{\n                    let content = \"\";\n                    if (node.type === \"text\") {\n                        content = node.text || \"\";\n                    } else if (node.type === \"file\") {\n                        content = node.file || \"\";\n                    } else if (node.type === \"link\") {\n                        content = node.url || \"\";\n                    } else if (node.type === \"image\") {\n                        content = node.url || \"\";\n                    } else {\n                        content = node.text || node.file || node.url || \"\";\n                    }\n                    return {\n                        id: node.id,\n                        position: {\n                            x: node.x,\n                            y: node.y\n                        },\n                        content,\n                        width: node.width,\n                        height: node.height,\n                        type: node.type,\n                        color: node.color,\n                        label: node.label,\n                        group: node.group\n                    };\n                });\n                setState((prev)=>({\n                        ...prev,\n                        nodes,\n                        edges: canvasData.edges.map((edge)=>({\n                                id: edge.id,\n                                from: edge.fromNode,\n                                to: edge.toNode,\n                                fromSide: edge.fromSide,\n                                toSide: edge.toSide,\n                                label: edge.label,\n                                color: edge.color || undefined\n                            })),\n                        scale: 1,\n                        offset: {\n                            x: 0,\n                            y: 0\n                        }\n                    }));\n            } catch (e) {\n            // Ignore parse errors\n            }\n        } else {\n            setState(INITIAL_STATE);\n        }\n    }, [\n        activeCanvasId\n    ]);\n    const getContentBoundingBox = ()=>{\n        if (state.nodes.length === 0) return {\n            minX: 0,\n            minY: 0,\n            maxX: 0,\n            maxY: 0\n        };\n        const minX = Math.min(...state.nodes.map((n)=>n.position.x - n.width / 2));\n        const maxX = Math.max(...state.nodes.map((n)=>n.position.x + n.width / 2));\n        const minY = Math.min(...state.nodes.map((n)=>n.position.y - n.height / 2));\n        const maxY = Math.max(...state.nodes.map((n)=>n.position.y + n.height / 2));\n        return {\n            minX,\n            minY,\n            maxX,\n            maxY\n        };\n    };\n    const handleWheel = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e)=>{\n        var _e_target, _canvasRef_current;\n        const markdownContent = (_e_target = e.target) === null || _e_target === void 0 ? void 0 : _e_target.closest(\".markdown-content\");\n        if (markdownContent) {\n            const hasScrollableContent = markdownContent.scrollHeight > markdownContent.clientHeight;\n            if (hasScrollableContent) return;\n        }\n        e.preventDefault();\n        const delta = e.deltaY;\n        // Reduce zoom intensity\n        const scaleStep = 0.05; // 5% per scroll\n        const scaleChange = delta > 0 ? 1 - scaleStep : 1 + scaleStep;\n        const newScale = Math.max(0.1, Math.min(2, state.scale * scaleChange));\n        // Get mouse position relative to the canvas\n        const canvasRect = (_canvasRef_current = canvasRef.current) === null || _canvasRef_current === void 0 ? void 0 : _canvasRef_current.getBoundingClientRect();\n        if (!canvasRect) return;\n        const mouseX = e.clientX - canvasRect.left;\n        const mouseY = e.clientY - canvasRect.top;\n        // Calculate mouse position in the current canvas coordinate system\n        const prevScale = state.scale;\n        const prevOffset = state.offset;\n        const worldX = mouseX / prevScale - prevOffset.x;\n        const worldY = mouseY / prevScale - prevOffset.y;\n        // New offset so that the world point under the cursor stays under the cursor\n        const newOffsetX = mouseX / newScale - worldX;\n        const newOffsetY = mouseY / newScale - worldY;\n        setState((prev)=>({\n                ...prev,\n                scale: newScale,\n                offset: {\n                    x: newOffsetX,\n                    y: newOffsetY\n                }\n            }));\n    }, [\n        state.scale,\n        state.offset\n    ]);\n    const handleMouseDown = (e)=>{\n        var _e_target;\n        // Prevent dragging if the click originated from a markdown content area\n        // This is important for text selection and interaction within markdown nodes\n        const isMarkdownContent = (_e_target = e.target) === null || _e_target === void 0 ? void 0 : _e_target.closest(\".markdown-content\");\n        if (isMarkdownContent) {\n            return;\n        }\n        if (e.button === 0) {\n            setIsDragging(true);\n            setDragStart({\n                x: e.clientX,\n                y: e.clientY\n            });\n        }\n    };\n    const handleMouseMove = (e)=>{\n        if (isDragging) {\n            const dx = e.clientX - dragStart.x;\n            const dy = e.clientY - dragStart.y;\n            setState((prev)=>({\n                    ...prev,\n                    // Adjust offset based on current scale\n                    offset: {\n                        x: prev.offset.x + dx / prev.scale,\n                        y: prev.offset.y + dy / prev.scale\n                    }\n                }));\n            setDragStart({\n                x: e.clientX,\n                y: e.clientY\n            });\n        }\n    };\n    const handleMouseUp = ()=>{\n        setIsDragging(false);\n    };\n    const handleDragOver = (e)=>{\n        e.preventDefault();\n        setIsDraggingFile(true);\n    };\n    const handleDragLeave = ()=>{\n        setIsDraggingFile(false);\n    };\n    const handleDrop = async (e)=>{\n        e.preventDefault();\n        setIsDraggingFile(false);\n        setIsLoading(true);\n        const file = e.dataTransfer.files[0];\n        if (!file || !file.name.endsWith(\".canvas\")) {\n            alert(\"Please drop a valid Obsidian canvas file (.canvas)\");\n            setIsLoading(false);\n            return;\n        }\n        try {\n            const text = await file.text();\n            // Add to canvas list if not present\n            const canvasListRaw = localStorage.getItem(\"canvas-list\");\n            let canvasList = canvasListRaw ? JSON.parse(canvasListRaw) : [];\n            if (!canvasList.find((c)=>c.id === file.name)) {\n                canvasList.push({\n                    id: file.name,\n                    name: file.name\n                });\n                localStorage.setItem(\"canvas-list\", JSON.stringify(canvasList));\n            }\n            localStorage.setItem(\"canvas-\" + file.name, text);\n            localStorage.setItem(\"canvas-active\", file.name);\n            setActiveCanvasId(file.name);\n            const canvasData = JSON.parse(text);\n            const nodes = canvasData.nodes.map((node)=>{\n                let content = \"\";\n                if (node.type === \"text\") {\n                    content = node.text || \"\";\n                } else if (node.type === \"file\") {\n                    content = node.file || \"\";\n                } else if (node.type === \"link\") {\n                    content = node.url || \"\";\n                } else if (node.type === \"image\") {\n                    content = node.url || \"\";\n                } else {\n                    content = node.text || node.file || node.url || \"\";\n                }\n                return {\n                    id: node.id,\n                    position: {\n                        x: node.x,\n                        y: node.y\n                    },\n                    content,\n                    width: node.width,\n                    height: node.height,\n                    type: node.type,\n                    color: node.color,\n                    label: node.label,\n                    group: node.group\n                };\n            });\n            setState((prev)=>({\n                    ...prev,\n                    nodes,\n                    edges: canvasData.edges.map((edge)=>({\n                            id: edge.id,\n                            from: edge.fromNode,\n                            to: edge.toNode,\n                            fromSide: edge.fromSide,\n                            toSide: edge.toSide,\n                            label: edge.label,\n                            color: edge.color || undefined\n                        })),\n                    scale: 1,\n                    offset: {\n                        x: 0,\n                        y: 0\n                    }\n                }));\n        } catch (error) {\n            console.error(\"Error loading canvas file:\", error);\n            alert(\"Error loading canvas file. Please make sure it's a valid Obsidian canvas file.\");\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    const handleNodeClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((node)=>{\n        // Only apply for 'file', 'text', and 'link' node types\n        if (node.type !== \"file\" && node.type !== \"text\" && node.type !== \"link\") {\n            return;\n        }\n        if (canvasRef.current) {\n            const canvasRect = canvasRef.current.getBoundingClientRect();\n            const canvasWidth = canvasRect.width;\n            const canvasHeight = canvasRect.height;\n            // Desired padding around the node when zoomed (e.g., 10% of canvas dimension)\n            const padding = 50;\n            // Calculate the scale needed to fit the node's content within the canvas\n            // Consider both width and height to ensure the entire node is visible\n            const scaleX = (canvasWidth - padding * 2) / node.width;\n            const scaleY = (canvasHeight - padding * 2) / node.height;\n            const newScale = Math.max(0.1, Math.min(Math.min(scaleX, scaleY), 1.1)); // Max zoom to 1.5 to prevent excessive zoom for very small nodes\n            // Calculate new offset to center the node\n            // The current node's center is at (node.position.x, node.position.y)\n            // We want this point to align with the canvas center after scaling\n            const newOffsetX = canvasWidth / 2 / newScale - node.position.x;\n            const newOffsetY = canvasHeight / 2 / newScale - node.position.y;\n            setState((prev)=>({\n                    ...prev,\n                    scale: newScale,\n                    offset: {\n                        x: newOffsetX,\n                        y: newOffsetY\n                    }\n                }));\n        }\n    }, []);\n    // Save markdown to cache and use cached markdown for file nodes\n    const handleMarkdownUpload = async (file)=>{\n        try {\n            const text = await file.text();\n            localStorage.setItem(\"md-cache-\" + file.name, text); // Cache markdown\n            // Find nodes that reference this markdown file\n            const markdownNodes = state.nodes.filter((node)=>node.type === \"file\" && node.content === file.name);\n            if (markdownNodes.length > 0) {\n                // Update the content of matching nodes\n                setState((prev)=>({\n                        ...prev,\n                        nodes: prev.nodes.map((node)=>{\n                            if (markdownNodes.some((mdNode)=>mdNode.id === node.id)) {\n                                // Remove .md extension and prepend as h3 heading\n                                const fileNameWithoutExt = file.name.replace(/\\.md$/, \"\");\n                                const contentWithHeading = \"### \".concat(fileNameWithoutExt, \"\\n\\n\").concat(text);\n                                return {\n                                    ...node,\n                                    content: contentWithHeading,\n                                    type: \"text\",\n                                    width: Math.max(node.width, 400),\n                                    height: Math.max(node.height, 300)\n                                };\n                            }\n                            return node;\n                        })\n                    }));\n            }\n        } catch (error) {\n            console.error(\"Error loading markdown file:\", error);\n            alert(\"Error loading markdown file. Please try again.\");\n        }\n    };\n    // Use cached markdown for file nodes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setState((prev)=>({\n                ...prev,\n                nodes: prev.nodes.map((node)=>{\n                    if (node.type === \"file\") {\n                        const cached = localStorage.getItem(\"md-cache-\" + node.content);\n                        if (cached) {\n                            const fileNameWithoutExt = node.content.replace(/\\.md$/, \"\");\n                            return {\n                                ...node,\n                                content: \"### \".concat(fileNameWithoutExt, \"\\n\\n\").concat(cached),\n                                type: \"text\",\n                                width: Math.max(node.width, 400),\n                                height: Math.max(node.height, 300)\n                            };\n                        }\n                    }\n                    return node;\n                })\n            }));\n    }, [\n        state.nodes.length\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative w-full h-screen overflow-hidden bg-background\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_SideMenu__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                nodes: state.nodes,\n                onMarkdownUpload: handleMarkdownUpload,\n                onCanvasSwitch: setActiveCanvasId\n            }, void 0, false, {\n                fileName: \"/Users/senpai/Developer/notes-cavas/src/components/Canvas.tsx\",\n                lineNumber: 353,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: canvasRef,\n                className: \"relative w-full h-full \".concat(isDraggingFile ? \"bg-gray-100 dark:bg-gray-800\" : \"\"),\n                onMouseDown: handleMouseDown,\n                onMouseMove: handleMouseMove,\n                onMouseUp: handleMouseUp,\n                onMouseLeave: handleMouseUp,\n                onDragOver: handleDragOver,\n                onDragLeave: handleDragLeave,\n                onDrop: handleDrop,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_canvas_BackgroundDots__WEBPACK_IMPORTED_MODULE_5__.BackgroundDots, {}, void 0, false, {\n                        fileName: \"/Users/senpai/Developer/notes-cavas/src/components/Canvas.tsx\",\n                        lineNumber: 369,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_canvas_ThemeToggle__WEBPACK_IMPORTED_MODULE_7__.ThemeToggle, {}, void 0, false, {\n                        fileName: \"/Users/senpai/Developer/notes-cavas/src/components/Canvas.tsx\",\n                        lineNumber: 370,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"absolute inset-0\",\n                        style: {\n                            transform: \"scale(\".concat(state.scale, \") translate(\").concat(state.offset.x, \"px, \").concat(state.offset.y, \"px)\"),\n                            transformOrigin: \"0 0\"\n                        },\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                className: \"absolute top-0 left-0 w-full h-full pointer-events-none\",\n                                style: {\n                                    zIndex: 0,\n                                    overflow: \"visible\"\n                                },\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_canvas_EdgeRenderer__WEBPACK_IMPORTED_MODULE_4__.EdgeRenderer, {\n                                    edges: state.edges,\n                                    nodes: state.nodes\n                                }, void 0, false, {\n                                    fileName: \"/Users/senpai/Developer/notes-cavas/src/components/Canvas.tsx\",\n                                    lineNumber: 386,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/senpai/Developer/notes-cavas/src/components/Canvas.tsx\",\n                                lineNumber: 379,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"relative\",\n                                style: {\n                                    zIndex: 1\n                                },\n                                children: state.nodes.map((node)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_canvas_CanvasNode__WEBPACK_IMPORTED_MODULE_6__.CanvasNode, {\n                                        node: node,\n                                        onNodeClick: handleNodeClick\n                                    }, node.id, false, {\n                                        fileName: \"/Users/senpai/Developer/notes-cavas/src/components/Canvas.tsx\",\n                                        lineNumber: 390,\n                                        columnNumber: 15\n                                    }, this))\n                            }, void 0, false, {\n                                fileName: \"/Users/senpai/Developer/notes-cavas/src/components/Canvas.tsx\",\n                                lineNumber: 388,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_canvas_CanvasOverlay__WEBPACK_IMPORTED_MODULE_8__.CanvasOverlay, {\n                                isLoading: isLoading,\n                                isDraggingFile: isDraggingFile,\n                                hasNodes: state.nodes.length > 0\n                            }, void 0, false, {\n                                fileName: \"/Users/senpai/Developer/notes-cavas/src/components/Canvas.tsx\",\n                                lineNumber: 397,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/senpai/Developer/notes-cavas/src/components/Canvas.tsx\",\n                        lineNumber: 372,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/senpai/Developer/notes-cavas/src/components/Canvas.tsx\",\n                lineNumber: 358,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/senpai/Developer/notes-cavas/src/components/Canvas.tsx\",\n        lineNumber: 352,\n        columnNumber: 5\n    }, this);\n}\n_s(Canvas, \"Od6/DqssPJiJMO0JGccWm3n0fSg=\", false, function() {\n    return [\n        _contexts_ThemeContext__WEBPACK_IMPORTED_MODULE_2__.useTheme\n    ];\n});\n_c = Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Canvas.tsx\n"));

/***/ })

});